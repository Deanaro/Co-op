<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Fireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shift = round(random(60));
image_xscale = 2;
image_yscale = 2;
image_speed = 0;
changedir = 0;
movex = 0;
movey= 0;
Alert = 0;
ActionChange = 0;
Cooldown = 0;
Attack_Range = 100;
Not_Alert_Range = 350;
Alert_Range = 500
/////pathfinding !\\
UpdatePath = 0;
CanUpdate = 0;
Target = noone;
NodeCount = 0;
dir = 0;
move = 0;
/////pathfinding !//
///// stats  !\\
Life = 10;
//dmg =
spd = 3;
//armor =
///// stats !//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Target = scr_AI_Alert(); // checks if a player is in range and if so turns alert and returns nearest players ID
if Alert = 1
{scr_AI_Action_Alert();} //chooses between Alert actions
else if Alert = 0
{scr_AI_Action();} //chooses between Non Alert actions
if move !=0
scr_AI_Move(); // moves enemy based on speed and direction of variable "dir" (degrees);

/*
if place_meeting(x,y,obj_Enemy)
{
    //push them aside
    var unit  = instance_place(x,y,obj_Enemy)
    
    with unit
    {
    var loop = 6
    while place_meeting(unit.x,unit.y,obj_Enemy) and loop !=0
    {
    loop --;
    if other.movex &lt; other.movey
    {
        var temp = sign(x -other.x)
        if !place_meeting(x + temp,y,obj_solid) and x + temp &lt; room_width and x+ temp &gt; 0
        {x += temp;}
        if !place_meeting(other.x - temp,other.y,obj_solid) and other.x - temp &lt; room_width and other.x- temp &gt; 0
        {other.x += -temp;}
    }
    else
    {
        var temp = sign(y -other.y)
        if !place_meeting(x,y + temp,obj_solid) and y + temp &lt; room_height and y+ temp &gt; 0
        {y += temp;}
        
        if !place_meeting(other.x,other.y-temp,obj_solid) and other.y - temp &lt; room_height and other.y- temp &gt; 0
        {other.y += -temp;}
    }
   }
 }
}
*/


depth = -bbox_bottom; //depth
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//restart location and life on room start

x = xstart;
y = ystart;
Life = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// this will draw the path and vision range of the enemy, works better with fiew enemies


/*draw_set_alpha(0.05);

if Alert = 0
{
    draw_set_color(c_green);
    draw_circle(x,bbox_bottom,Not_Alert_Range,0);
    draw_set_color(c_red);
}
else
{
    draw_set_color(c_red);
    draw_circle(x,bbox_bottom,Alert_Range,0);
    
}
draw_set_alpha(1);
if NodeCount !=0
{
for(i = NodeCount; i &gt; 0; i--)
{
if Node[i] &lt; obj_Pathfinder.Hcells
{var y1 = 0;}
else
{ var y1 = floor(Node[i]/obj_Pathfinder.Hcells);}// the row number of the cell
var x1 = Node[i] - (y1 * obj_Pathfinder.Hcells);
if Node[i-1] &lt; obj_Pathfinder.Hcells
{var y2 = 0;}
else
{ var y2 = floor(Node[i-1]/obj_Pathfinder.Hcells);}// the row number of the cell
var x2 = Node[i-1] - (y2 * obj_Pathfinder.Hcells);
draw_set_colour(c_red)
draw_line_width(x1*64+32,y1*64+32,x2*64+32,y2*64+32,3);
draw_set_colour(c_black)
draw_rectangle(x1*64+32-3,y1*64+32-3,x1*64+32+3,y1*64+32+3,0);
}
draw_circle(x2*64+32,y2*64+32,5,0);
}*/
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
