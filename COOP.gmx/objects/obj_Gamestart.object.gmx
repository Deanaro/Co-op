<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>cntrl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* this object is placed on the first room */


/* this object is placed on the first room ONLY (rm_Start)*/

mp_potential_settings(45,15,5,1);
randomize() // without this gamemaker uses a defualt seed which grants the same results every time
for (var pad=0; pad &lt;4; pad++)
{ 
    gamepad_set_axis_deadzone(pad, 0.3);       // Set the "deadzone" for the axis
    gamepad_set_button_threshold(pad, 0.1);    // Set the "threshold" for the triggers
}

for (var i = 0; i &lt; 4; i++;)
{
global.Player[i, 0] = noone;  // array for player objects index
global.Player[i, 1] = -1; // pad_index number (-1 = noone)
global.Player[i, 2] = 10; // sets health to 10!!
}


for (var i = 0; i &lt; 16; i++;)
{global.Slot[i] = 0;}        // array for slots index values


/* sets initial slot locks
/* initial locks
for (var i = 1; i &amp;lt; 16; i +=2;)
{
Slot[i] = 11;
global.Slot[i] = 11;
}
*/


//TEMP
str1 = "Press E on keyboard or Start on gamepad to join";
str2 = "Press f3 to start a new game or f2 to load game";
draw_set_font(fnt_Help);
str1L = string_width(str1);
str2L = string_width(str2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// moves room, the x1 y1 x2 y2 is the coordinates of the spawn point

if keyboard_check_pressed(vk_f3)
{
if instance_exists(obj_Player)
    {
    
    global.x1 = 100;
    global.y1 = 100;
    global.x2 = 300;
    global.y2 = 300;
    room_goto(rm_Test5) //temp destination
    }
    else 
    {
    obj_Console.console_open = 1;
    scr_Console_Log_Write("ERROR: No Players", "error");}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_Help);
draw_set_color(c_white);
draw_text((room_width-str1L)/2,room_height/3,str1)
draw_text((room_width-str2L)/2,room_height/3+96,str2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
